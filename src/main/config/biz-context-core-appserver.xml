<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">  

    <description> 定义业务层和集成层对象，包括Action、Service、BO、DAO、SAO、JNDI资源	</description>
    
    
    <context:component-scan base-package="com.jeeframework.webdemo.util,com.jeeframework.webdemo.biz.service.impl.local,com.jeeframework.webdemo.integration.impl.ibatis" />
    <!--===================================================================== -->
    <!-- 配置外部变量文件 -->
    <!--===================================================================== -->
    <!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
    <!--</bean>-->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <description>可以引用CLASSPATH中springmvctest.properties中定义的变量</description>
            <list>
                <value>classpath:web_demo-${conf.env}.properties</value>
            </list>
        </property>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties" />
    </bean>
    <!--===================================================================== -->
    <!-- 数据源定义，具体具体情况选择是否多数据源 -->
    <!--===================================================================== -->
    <bean id="dsFactory" class="com.jeeframework.logicframework.integration.dao.datasource.DataSourceFactory" scope="prototype">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="withDB" value-ref="withDB" />
            </map>

        </property>
        <property name="defaultTargetDataSource" ref="withDB" />

    </bean>

    <bean id="withDB" class="com.jeeframework.logicframework.integration.dao.datasource.ConfigDataSource" destroy-method="close">
        <property name="isConfig" value="${jdbc.isConfig}" />
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="validationQuery" value="select 1 from dual" />
        <property name="testOnBorrow" value="true" />
    </bean>

    <!--===================================================================== -->
    <!-- iBATIS 配置文件定义 -->
    <!--===================================================================== -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dsFactory" />  
        <property name="configLocation" value="classpath:sqlmap-config.xml" />
        <property name="mapperLocations" value="classpath*:conf-sqlmap/sqlmap-mapping*.xml"/>  
    </bean>  
      
    <!-- 配置SqlSessionTemplate -->    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">    
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />    
    </bean>  



    <!--===================================================================== -->
    <!-- 事务 配置文件定义 -->
    <!--===================================================================== -->

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*" propagation="REQUIRED" rollback-for="BusinessServiceException" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="ServiceOperation" expression="execution(* com.jeeframework.webdemo.biz.service.impl.local.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="ServiceOperation" />
    </aop:config>

    <!--===================================================================== -->
    <!-- 事务管理器，根据具体情况选择是否启用容器的JTA管理 -->
    <!--===================================================================== -->

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dsFactory" />
    </bean>

</beans>